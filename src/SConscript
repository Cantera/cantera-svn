from buildutils import *

Import('env', 'buildTargets', 'installTargets', 'libraryTargets')

def defaultSetup(env, subdir, extensions):
    return mglob(env, subdir, *extensions)

def baseSetup(env, subdir, extensions):
    escaped_datadir = '\\"' + env['ct_datadir'].replace('\\', '\\\\') + '\\"'
    env.Append(CPPDEFINES={'CANTERA_DATA': escaped_datadir})
    return defaultSetup(env, subdir, extensions)

def equilSetup(env, subdir, extensions):
    env.Append(CPPPATH=['#ext/f2c_libs'])
    return defaultSetup(env, subdir, extensions)

def numericsSetup(env, subdir, extensions):
    if env['use_sundials'] == 'y':
        remove = 'CVodeInt.cpp'
    else:
        remove = 'CVodesIntegrator.cpp'
    return [s for s in mglob(env, subdir, *extensions)
            if s.name != remove]

# (subdir, (file extensions), (extra setup(env)))
libs = [('base', ['cpp'], baseSetup),
        ('thermo', ['cpp'], defaultSetup),
        ('tpx', ['cpp'], defaultSetup),
        ('equil', ['cpp','c'], equilSetup),
        ('converters', ['cpp'], defaultSetup),
        ('numerics', ['cpp'], numericsSetup),
        ('kinetics', ['cpp'], defaultSetup),
        ('transport', ['cpp'], defaultSetup),
        ('spectra', ['cpp'], defaultSetup),
        ('oneD', ['cpp'], defaultSetup),
        ('zeroD', ['cpp'], defaultSetup),
        ('clib', ['cpp'], defaultSetup),
        ]

for subdir, extensions, setup in libs:
    localenv = env.Clone()
    localenv.Append(CPPPATH=Dir('#include'))
    localenv.Append(CPPPATH=Dir('#src')) # todo: remove when not needed
    source = setup(localenv, subdir, extensions)
    objects = localenv.SharedObject(source)
    localenv.Depends(objects, localenv['config_h_target'])
    libraryTargets.extend(objects)


# build the Cantera static library
localenv = env.Clone()
lib = localenv.StaticLibrary('../lib/cantera', libraryTargets,
                             SPAWN=getSpawn(localenv))
localenv.Depends(lib, localenv['config_h_target'])
inst = localenv.Install('$inst_libdir', lib)
buildTargets.extend(lib)
installTargets.extend(inst)

# Build the Cantera shared library
lib = localenv.SharedLibrary('../lib/cantera_shared', libraryTargets,
                             SPAWN=getSpawn(localenv))
env['cantera_shlib'] = lib
localenv.Depends(lib, localenv['config_h_target'])
inst = localenv.Install('$inst_libdir', lib)
buildTargets.extend(lib)
installTargets.extend(inst)
