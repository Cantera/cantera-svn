#!/bin/sh

.SUFFIXES :
.SUFFIXES : .cpp .d .o  .h .f


# the object files to be linked together. 
OBJS = demo_ftnlib.o isentropic.o  ctlib.o

# additional flags to be passed to the linker. If your program
# requires other external libraries, put them here
LINK_OPTIONS = 


# the Fortran compiler
FORT = @F77@

# Fortran compile flags  
FORT_FLAGS = @FFLAGS@ 

FCLIBS= @FCLIBS@
FLIBS = @FLIBS@


# Fortran libraries
FORT_LIBS = @LCXX_FLIBS@ @LCXX_END_LIBS@ @FLIBS@ 

# the C++ compiler
CXX = @CXX@

# C++ compile flags
CXX_FLAGS = @CXXFLAGS@

# external libraries
EXT_LIBS = @LOCAL_LIBS@ -lctcxx

# the directory where the Cantera libraries are located
CANTERA_LIBDIR=@buildlib@

# the directory where Cantera include files may be found.
CANTERA_INCDIR=@ctroot@/build/include

# flags passed to the C++ compiler/linker for the linking step
LCXX_FLAGS = -L$(CANTERA_LIBDIR) @LOCAL_LIB_DIRS@ @CXXFLAGS@

# how to compile C++ source files to object files
.@CXX_EXT@.@OBJ_EXT@:
	$(CXX) -c $< -I$(CANTERA_INCDIR) $(CXX_FLAGS)

# how to create a dependency file
.@CXX_EXT@.d:
	@CXX_DEPENDS@ -I$(CANTERA_INCDIR) $(CXX_FLAGS) $(LOCAL_DEFNS) $*.cpp > $*.d


# how to compile Fortran source files to object files
.@F77_EXT@.@OBJ_EXT@: 
	$(FORT) -c $< $(FORT_FLAGS)

.f.d:
	@echo "$*.o: $*.f" | cat > $*.d 


PROGRAM = $(PROG_NAME)$(EXE_EXT)

DEPENDS = $(OBJS:.o=.d)

all: isentropic ctlib 

demo_ftnlib.o: @ctroot@/tools/templates/f77/demo_ftnlib.cpp
	$(CXX) -c $< -I$(CANTERA_INCDIR) $(CXX_FLAGS)

demo_ftnlib.d: @ctroot@/tools/templates/f77/demo_ftnlib.cpp
	@CXX_DEPENDS@ -I$(CANTERA_INCDIR) $(CXX_FLAGS) $< > $*.d

isentropic: isentropic.o demo_ftnlib.o
	$(CXX) -o isentropic isentropic.o demo_ftnlib.o $(LCXX_FLAGS) $(CANTERA_LIBS) \
                $(LINK_OPTIONS) $(EXT_LIBS) @LIBS@ $(FORT_LIBS)

ctlib: ctlib.o demo_ftnlib.o
	$(CXX) -o ctlib ctlib.o demo_ftnlib.o $(LCXX_FLAGS) $(CANTERA_LIBS) \
               $(LINK_OPTIONS) $(EXT_LIBS) @LIBS@ $(FORT_LIBS)

test:
	@MAKE@ 
	./runtest

INSTALL_DIR=@ct_demodir@/f77

install:
	@INSTALL@ -d     $(INSTALL_DIR)
	@INSTALL@       -c -m ug+rw,o+r f77demos.mak $(INSTALL_DIR)/Makefile
	@INSTALL@       -c -m ug+rw,o+r  @ctroot@/tools/templates/f77/demo_ftnlib.cpp $(INSTALL_DIR)
	@(for ihhh in *.f  *blessed* README.txt ; do  \
             @INSTALL@        $${ihhh} -m ug+rw,o+r $(INSTALL_DIR) ; \
             echo "@INSTALL@  $${ihhh} -m ug+rw,o+r $(INSTALL_DIR)" ; \
         done )
	@INSTALL@        runtest  $(INSTALL_DIR) ;




clean:
	$(RM) $(OBJS) isentropic  ctlib *.d .depends \
	       diff* output_0.txt output_1.txt gri30.xml ct2ctml.log \
	       isentropic.dsp

depends: 
	$(MAKE) .depends


.depends: $(DEPENDS)
	cat *.d > .depends

TAGS: 
	etags *.h *.cpp

ifeq ($(wildcard .depends), .depends)
include .depends
endif

