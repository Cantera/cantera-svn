
Instructions for building under Visual C++ v.7 Without Fortran Support
----------------------------------------------------------------------------


1) Checkout the regular Cantera distribution, and cd to the top directory.
    cvs -d":ext:hkmoffa@cvs.sourceforge.net:/cvsroot/cantera" co Cantera
    cd Cantera 


2) Remove the regular win32 directory and everything under it:
   /bin/rm -rf win32

3) Checkout out the new win32 module, from Cantera's sourceforge distribution:
    cvs -d":ext:hkmoffa@cvs.sourceforge.net:/cvsroot/cantera" co win32


4) Now, there should be a win32 directory located in the distribution's top
   directory that has a different format than the previous one.

5) Add support for command line execution of the VC++ compiler
   a) Add the following lines to your .profile file:
   #
   VS_HOME='/cygdrive/c/Program Files/Microsoft Visual Studio .NET 2003'
   export VS_HOME
   #
   PATH=$VS_HOME/Vc7/bin:$VS_HOME/Common7/IDE:$PATH
   export PATH
   #

   b) Make sure your windows user environmental variable, INCLUDE, contains
      the default MSVC++7.0 include directories:

     Right-clicking "My Computer", selecting properties:advanced, 
     and open up Environmental Variables
     The variable INCLUDE should contain these entries:
        C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\include\;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include\;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\
 


6) Go to config directory and type autoconf. Return to top directory.

7) Go to win32/vc7 directory.
   Copy configure.vc++ to the top Cantera's directory, edit it, and execute it
   (note, it must be a unix text file to execute)

   cd win32/vc7
   cp configure.vc++ ../..
   cd ../..
   vi configure.vc++
   configure.vc++

8) Open up a windows explorer window, go to the directory win32/vc7, and double
   click on Cantera.sln.

9) Build the solution cantera from within MS VC++ v7.0.

10) An error exit is generated by python v. 2.3's distutuils module 
   whenever a user module is compiled with MS VC++ v7.0. Note, python was
   compiled with  MS VC++ v6.0. I have found that just disabling the error
   exit leads to acceptable behavior with no problems. 

   To disable the error exit, edit the file:
          /cygdrive/c/python23/Lib/distutils/msvccompiler.py
   Comment out lines 211 to 215 by prepending with a "#".
     
   Note, this module generates compiler command lines for python. During 
   Cantera's python build process, the distutils module actually takes over
   the build process from Cantera's makefile, and carries out the build/install
   operations. Therefore, there is no way around this step. 

   Note, python 2.4 is in alpha testing as of 9/2004. It's being built with
   MSVC++ v7.0. I'm not sure if this means similar problems for Cantera users
   who want to use python 2.4 with MSVC++ v6.0 in the future or not.

   (HKM -> I'll try to find out more information about this whole issue in 
    the near future i.e., is there an upgraded distutils module?)

11) Go to the top of the Cantera distribution, and type:

   make win


12) Go to win32/vc7 and double click on cantera_examples.sln.
    Build the cantera_examples from within MS VC++ v7.0.

13) Go to the top of the Cantera distribution, and type
    make win-install

14) To test the installation, go to the top of the Cantera intallation.
    Go into the test_problems directory and run all of the problems:

    cd test_problems
    make test



